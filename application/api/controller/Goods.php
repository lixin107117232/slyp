<?phpnamespace app\api\controller;use app\admin\model\IntegralSku;use app\common\controller\Api;use think\cache\driver\Redis;use think\Db;/** * 示例接口 */class Goods extends Api{    protected $noNeedLogin = ['buy', 'index','seckillShop'];    protected $noNeedRight = ['test2'];//生成唯一订单号    public function build_order_no()    {        return date('ymd') . substr(implode(NULL, array_map('ord', str_split(substr(uniqid(), 7, 13), 1))), 0, 8);    }//记录日志    public function insertLog($event, $type = 0)    {        Db::table('ih_log')->data(['event' => $event, 'type' => $type])->insert();    }    public function index()    {        $data = \app\common\model\seckill\Goods::where(["id"=>6])->find();        if($data["specs_data"]==1){            //多规格            $sku=IntegralSku::where(["item"=>6])->select();            $redis = new Redis();            foreach ($sku as $v){                $redis->set('stock'.$v["sku_id"], 0);            }        }else{            $redis = new Redis();            $redis->set('number', 0);        }        return view('', compact('data'));    }    public function seckillShop( )    {        //  查询数据库库存        //$mysqlNumber = Db::name("store")->find($id);        $mysqlNumber = IntegralSku::where(["sku_id"=>6])->find();        dump($mysqlNumber);die();        $redis = new Redis();        //   获取库存销量  redis 必须 跟 数据库 销量一致，强类型 ，先扣库存，再进行扣款        $redisNumber = $redis->get('stock6');        //  使用redis watch 监听        $redis->handler()->watch('stock6');        //        if ($redisNumber > $mysqlNumber['stock6'] && $mysqlNumber['stock6'] == 0) {            exit('秒杀结束');        }        //  开启redis  事务        $redis->handler()->multi();        $redis->inc('stock6');        $res = $redis->handler()->exec();        $price = 10;        $user_id = 1;        $goods_id = 1;        $sku_id = 11;        //生成订单        $order_sn = $this->build_order_no();        if ($res) {            //$d = Db::name("store")->where('id', $id)->update(['number' => $mysqlNumber['number'] - 1]);            $r=Db::table('ih_order')->insert(['order_sn' => $order_sn, 'user_id' => $user_id, 'goods_id' => $goods_id, 'sku_id' => $sku_id, 'price' => $price, 'addtime' => time()]);            $status = Db::table('ih_store')->where('sku_id', $sku_id)->setDec('number');            $status=IntegralSku::where('sku_id', 6)->setDec("stock");            if ($status > 0) {                echo "库存减少成功";                $this->insertLog('库存减少成功');            } else {                echo "库存减少失败";                $this->insertLog('库存减少失败');            }            if ($status) {                echo $redisNumber;                echo "<br>";                echo $mysqlNumber['number'];                return '秒杀成功';            } else {                return '秒杀失败';            }        }    }}